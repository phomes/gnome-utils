<!-- ##### SECTION Title ##### -->
GdictContext

<!-- ##### SECTION Short_Description ##### -->
The dictionary abstract interface used by the widgets

<!-- ##### SECTION Long_Description ##### -->
<para>
The #GdictContext interface defines a generic dictionary query interface to be
used by the Dictionary widgets such as the #GdictDefbox widget.  It is an
abstract interface, and is designed to be used with any dictionary source.  The
programmer just has to implement this interface on their own dictionary source 
handling system for it to be viewable by a #GdictDefbox widget.
</para>

<para>
There is a dictionary source implementation provided by the Dictionary Library
&mdash; a RFC2229 compliant dictionary protocol client called
#GdictClientContext.
</para>

<!-- ##### SECTION See_Also ##### -->
<para>
#GdictClientContext, #GdictDefbox, #GdictEntry, #GdictSource
</para>

<!-- ##### SECTION Stability_Level ##### -->


<!-- ##### STRUCT GdictContext ##### -->
<para>
The #GdictContext struct contains private data only.
</para>


<!-- ##### ARG GdictContext:local-only ##### -->
<para>

</para>

<!-- ##### STRUCT GdictContextIface ##### -->
<para>

</para>

@base_iface: 
@get_databases: 
@get_strategies: 
@match_word: 
@define_word: 
@lookup_start: 
@lookup_end: 
@database_found: 
@strategy_found: 
@match_found: 
@definition_found: 
@error: 
@_gdict_context_1: 
@_gdict_context_2: 
@_gdict_context_3: 
@_gdict_context_4: 

<!-- ##### ENUM GdictContextError ##### -->
<para>
These identify the various errors that can occur while calling #GdictContext
functions.  The error messages depend on the particular #GdictContext
implementation.
</para>

@GDICT_CONTEXT_ERROR_PARSE: Indicates that the context is unable to parse the dictionary data.
@GDICT_CONTEXT_ERROR_NOT_IMPLEMENTED: Indicates that a command is not
implemented.
@GDICT_CONTEXT_ERROR_INVALID_DATABASE: Indicates that the supplied database
name is not valid.
@GDICT_CONTEXT_ERROR_INVALID_STRATEGY: Indicates that the supplied strategy
name is not valid.
@GDICT_CONTEXT_ERROR_INVALID_COMMAND: Indicates that the supplied command is
not valid.
@GDICT_CONTEXT_ERROR_NO_MATCH: Indicates that no matches were found for a given
word.
@GDICT_CONTEXT_ERROR_NO_DATABASES: Indicates that no databases are present on a
dictionary source.
@GDICT_CONTEXT_ERROR_NO_STRATEGIES: Indicates that no strategies are present on
a dictionary source.

<!-- ##### STRUCT GdictDatabase ##### -->
<para>
A <structname>GdictDatabase</structname> represents a database stored inside
a dictionary source.
</para>


<!-- ##### STRUCT GdictStrategy ##### -->
<para>
A <structname>GdictStrategy</structname> represents a strategy stored inside a
dictionary source.  Strategies are used in order to match words.  See
gdict_context_match_word().
</para>


<!-- ##### STRUCT GdictMatch ##### -->
<para>
A <structname>GdictMatch</structname> represents a match for a word searched
using the gdict_context_match_word() function.
</para>


<!-- ##### STRUCT GdictDefinition ##### -->
<para>
A <structname>GdictDefinition</structname> represents a definition of a word
searched using the gdict_context_define_word() function.
</para>


<!-- ##### FUNCTION gdict_context_get_local_only ##### -->
<para>

</para>

@context: 
@Returns: 


<!-- ##### FUNCTION gdict_context_set_local_only ##### -->
<para>

</para>

@context: 
@local_only: 


<!-- ##### FUNCTION gdict_context_lookup_databases ##### -->
<para>

</para>

@context: 
@error: 
@Returns: 


<!-- ##### FUNCTION gdict_context_lookup_strategies ##### -->
<para>

</para>

@context: 
@error: 
@Returns: 


<!-- ##### FUNCTION gdict_context_define_word ##### -->
<para>

</para>

@context: 
@database: 
@word: 
@error: 
@Returns: 


<!-- ##### FUNCTION gdict_context_match_word ##### -->
<para>

</para>

@context: 
@database: 
@strategy: 
@word: 
@error: 
@Returns: 


<!-- ##### FUNCTION gdict_database_ref ##### -->
<para>

</para>

@db: 
@Returns: 


<!-- ##### FUNCTION gdict_database_unref ##### -->
<para>

</para>

@db: 


<!-- ##### FUNCTION gdict_database_get_name ##### -->
<para>

</para>

@db: 
@Returns: 
<!-- # Unused Parameters # -->
@database: 


<!-- ##### FUNCTION gdict_database_get_full_name ##### -->
<para>

</para>

@db: 
@Returns: 
<!-- # Unused Parameters # -->
@database: 


<!-- ##### FUNCTION gdict_strategy_ref ##### -->
<para>

</para>

@strat: 
@Returns: 


<!-- ##### FUNCTION gdict_strategy_unref ##### -->
<para>

</para>

@strat: 


<!-- ##### FUNCTION gdict_strategy_get_name ##### -->
<para>

</para>

@strat: 
@Returns: 
<!-- # Unused Parameters # -->
@strategy: 


<!-- ##### FUNCTION gdict_strategy_get_description ##### -->
<para>

</para>

@strat: 
@Returns: 


<!-- ##### FUNCTION gdict_match_ref ##### -->
<para>

</para>

@match: 
@Returns: 


<!-- ##### FUNCTION gdict_match_unref ##### -->
<para>

</para>

@match: 


<!-- ##### FUNCTION gdict_match_get_word ##### -->
<para>

</para>

@match: 
@Returns: 


<!-- ##### FUNCTION gdict_match_get_database ##### -->
<para>

</para>

@match: 
@Returns: 


<!-- ##### FUNCTION gdict_definition_ref ##### -->
<para>

</para>

@def: 
@Returns: 


<!-- ##### FUNCTION gdict_definition_unref ##### -->
<para>

</para>

@def: 


<!-- ##### FUNCTION gdict_definition_get_total ##### -->
<para>

</para>

@def: 
@Returns: 


<!-- ##### FUNCTION gdict_definition_get_word ##### -->
<para>

</para>

@def: 
@Returns: 
<!-- # Unused Parameters # -->
@definition: 


<!-- ##### FUNCTION gdict_definition_get_database ##### -->
<para>

</para>

@def: 
@Returns: 
<!-- # Unused Parameters # -->
@definition: 


<!-- ##### FUNCTION gdict_definition_get_text ##### -->
<para>

</para>

@def: 
@Returns: 


